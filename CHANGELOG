-- ASSIGNMENT 1.1 --
2/3:
    9a:  Created project structure and makefile.
         Created some function signatures.
         Created an empty dungeon grid.
    10p: Added random room generation.
2/4:
    6p: Added walkways between rooms.
    8p: Added up/down staircases.
2/5:
    5p: Refactored dungeon into a dynamically-allocated data structure,
         containing width/height, room data, and cells.
        Also changed cells from a char into a struct with a type enum
         and hardness.
        Created dungeon_init and dungeon_destroy for allocation, tested
         for leaks with valgrind, and changed all methods to use this new
         structure.
        Added a random room count between pre-defined bounds. Extra rooms
         above the minimum, 6, may be added (if possible & chosen).
        Updated Makefile to compile files individually.
        Added immutable flag, and set it on the outside of the dungeon.
        
-- ASSIGNMENT 1.2 --
2/6: 
    1p:  Created files and basic layout for I/O and new main method
         Wrote logic for reading command-line flags
         Added extra flag, -p, for a custom path
2/10:
    9p:  Created macros for READ_UINT<size> to simplify code.
         Completed and tested loading functionality against sample files.
         Created a header file for general macros, macros.h.
         Added structure to main() to write files (although it currently
            returns an error code since it's unimplemented).
         Added a debug logging flag, -d/--debug.
2/11:
    4p:  Created macros for WRITE_UINT<size>.
         Completed dungeon save function.
         Adjusted dungeon struct to use proper int sizes, uint<8/16>_t.
2/12:
    5p:  Added a seeded, diffused, and smoothed hardness value for stone.
          Adjusted generator functions to deal with that accordingly.
         Added a feature to the debug flag that writes cell hardness to
          dungeon.pgm for viewing.
         Fixed a bug in the load function which lost the PC location after
          several load/saves.
         Fixed a bug that prevented both --load/--save at once.

-- ASSIGNMENT 1.03 --
2/18:
    11p: Created structure (header files, source files, submission format)
          for Assignment 1.03. Wrote out heap function signatures and struct.
2/24:
    12p: Wrote out a heap structure and tested it against some simple code.
2/26:
    1p:  Updated the dungeon struct to include the two pathfinding maps.
         Wrote a Dijkstra's implementation to fill both maps.
         Updated main function to print the two additional maps, and removed
          the -b/--border flag (not useful anymore).
         Fixed a bug in the heap implementation where the remove function
          used the incorrect l/r child indices.
         Fixed a bug in the heap implementation where removed nodes were
          not free'd, causing a memory leak.
         Tested all of the sample saved dungeons against the program's output
          using a script -- all match.

-- ASSIGNMENT 1.04 --
2/27:
    12p: Created make target and general structure for Assignment 1.04.
         Created "character.c/character.h" for characters and monsters.
3/3:
    9a:  Refactored dungeon code to use the new character structure for the PC.
         Added a character map.
3/4:
    3p:  Added functions to character.c to generate and destroy monsters.
         Added functions to character.c to generate an approximate line between
          two points and check if there is line of sight (no stone) between
          those points. Also added a function to get the next coordinate along
          that line.
3/5 
    11p: Wrote the logic for moving monsters around the game screen w/ lots of
          debugging.
         Discovered a bug in the line generation functions, so I rewrote them.
          They now can handle reversed x0/x1 and vertical lines.
         Added the main game loop.
         Added the --fps and --nummon flags.
         Added PC movement (it'll move randomly now).
         Tested for and fixed some destroy_character/game end memory leaks with Valgrind.

-- ASSIGNMENT 1.05 --
3/25:
    12p: Created basic structure for Assignment 1.05, including linking ncurses
          and a new game.c/game.h and 1_05.c.
         Added enums/constants for all the colors, symbols, and keybinds we're
          using. Moved character choices into the game renderer, the actual stored
          type ints are now arbitrary. 
    2p:  Got basic ncurses rendering working -- the dungeon is now drawn to the
          screen properly with colors.
3/26:
    12p: Created the monster menu in its entirety. Dungeon still doesn't move.
          Includes some basic rendering macros, for centering text and such.
         Began the basic work to accept keybinds from the user. Can now toggle
          the monster menu and scroll up/down.
         Added the keybinds to move the PC around. It can now 'eat' the monsters,
          but the game won't end when they're all dead.
         Added back the turn system. The game now takes all the monsters' turns
          until the PC comes around, then redraws and requests the next input.
         Added in the win/lose screens, drawn with ASCII art stored in macros.h.
          When they show up, the user presses a key to exit.
         Moved some common macros to macros.h so they're not repeated.
         Implemented staircases, which reinitialize the dungeon and move the PC
          to the respective staircase in the new map that makes sense.
    4p:  Final testing.
          Fixed a bug in the map loader which only manifested with the new PC
           rendering system -- the loaded coordinates displayed (in the character
           struct only) incorrectly.
          Fixed an issue where using stairs in a loaded map had the potential to
           crash the game, since the room count matched exactly what the file 
           specified though the configured random room count could be higher. 
          Cleaned up some debugging stuff.
          Fixed some inconsistencies with the dungeon_init function which led
           to uninitialized PC values being used if the map was loaded, not
           generated.
          Memory leak fixes with Valgrind. This is a fair bit harder now since
           ncurses doesn't free everything. :(
           https://www.manpagez.com/man/3/exit_curses/

-- ASSIGNMENT 1.06 --
3/27:
    11p: Updated Makefile to use g++, and renamed all C files to .cpp.
         Added _t suffixes to all the types I made since it started complaining
          about conflicting names.
         Added type casts where requested, fixed other compilation errors.
         Switched the `mutable` flag over to an `attributes` int on cells, now
          with two attributes, IMMUTABLE and SEEN (for fog of war).
         Added fog of war. Whenever the PC moves, the cells in a 3 cell radius
          outside of the PC get the SEEN attribute marked. Only SEEN cells are
          rendered.
         General cleanup: moved variable declarations to the top of functions,
          made all error returns use RETURN_ERROR or ERROR_AND_EXIT macros,
          switched C standard library imports to C++ (ie, string.h -> cstring).