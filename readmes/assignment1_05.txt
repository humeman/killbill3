COMS 3270
Assignment 1.04
---

This assignment builds upon the past assignments by switching to an ncurses-based rendering system
and adding player controls to the game. When running the game, it enters the normal game loop immediately.
The user can input a command during their turn (defined by them either moving or resting) to move the PC
around, or display a list of monsters relative to the PC. The monster menu, when opened, renders directly
over top of the screen, but no turns can be taken (nothing game-wise will happen) while it's open. If there
are too many monsters to display in the window, then a ^ or v will be displayed above/below the list to signal
that -- the arrow keys can be used to scroll. Pressing ESC will return to the game (after a 1s ncurses delay),
where the user can then take a turn. After the player's turn, any monsters who are ready to take their turn do
so before it becomes the PC's turn again.

The win/lose logic is unchanged. A character kills another character by moving to an occupied space. If the PC
 is killed, they lose, and if no monsters remain, they win. After the game ends, they can press any key to exit.

Loading/saving still work, and enemies path as expected towards the player (depending on their attributes).
Rooms are not persistent -- going up/down stairs generates an entirely new dungeon, destroying the old one.
Some colors are used to make things easier to see.

Implemented controls:
    PC Movement:
      7, y: up left
      8, k: up
      9, u: up right
      6, l: right
      3, n: down right
      2, j: down
      1, b: down left
      4, h: left
      5, <space>, .: don't move
    Staircases:
      >: go down stairs
      <: go up stairs
    Monster menu:
      m: open the monster list
      <up arrow>: scroll up (if possible)
      <down arrow>: scroll down (if possible)
      <esc>: exit (ncurses adds a 1s delay here)
    General:
      Q: quit the game

Compile:
    Run: make
    This will generate an `assignment1_05` binary.

Flags:
    -s, --save: Saves the randomly-generated dungeon to the set path.
    -l, --load: Loads a dungeon from the set path and prints it.
    -p, --path [path]: Overrides the default path, ~/.rlg327/dungeon.
    -n, --nummon [num]: Overrides the default monster count, 10.
                        Note that this will be used instead of the randomized
                        count in every dungeon generated by using staircases.
    -d, --debug: Prints debug messages while loading/saving.
                 Also generates a "dungeon.pgm" hardness map after loading.
    -h, --help: Displays a help message.  

Examples (relevant to this assignment):
    # Regular game
    ./assignment1_05

    # Spawn 15 monsters in each dungeon
    ./assignment1_05 -n 15

    # Load from a path for the starting dungeon
    ./assignment1_05 -l -p ~/dungeons/cool_dungeon.rlg327